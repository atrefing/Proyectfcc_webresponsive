* {
    box-sizing: border-box;
  }

  .gallery img {
    max-width:350px;
    width: 100%;
    height: 300px;
    object-fit: cover;
    border-radius: 10px;
}

  body {font-family: sans-serif;
    background-color: #f0eaea;
    margin:0;
  
  }

  .header {
    text-transform: uppercase;
    text-align:center;
    padding: 32px;
    background-color: #0a0a23;
    color: #fff;
    border-bottom: 4px solid #fdb347;
  }

.gallery {display: flex;
flex-direction: row;
flex-wrap: wrap;
justify-content: center;
    /*  La propiedad justify-content determina cómo se posicionan los           */
    /*  elementos dentro de un contenedor flex a lo largo del                   */
    /*  eje principal, afectando a su posición y al espacio que los rodea.      */
align-items: center;
    /*  La propiedad align-items posiciona el contenido flex        */
    /*  lo largo del eje transversal. En este caso, con tu          */
    /*  flex-direction establecido en row, el eje transversal       */
    /*  sería vertical.*/
padding: 20px 10px;
max-width:1400px;
margin: 0 auto;
gap: 16px;
/*  Tus imágenes necesitan algo de espacio entre ellas.                         */
/*                                                                              */
/*  La propiedad CSS abreviada gap establece los espacios, también conocidos    */
/*  como canales, entre filas y columnas. La propiedad gap y sus subpropiedades */
/*  row-gap y column-gap proporcionan esta funcionalidad para los diseños flex, */       
/*  grid, y multicolumna. La propiedad se aplica al elemento contenedor.        */
}

.gallery::after{
    /* El pseudo-elemento ::after crea un elemento que es el último hijo del 
        elemento seleccionado. Puedes hacer uso de él para añadir un elemento
        vacío a continuación de la ultima imagen. Si en su propiedad width 
        se le asigna el mismo valor que tiene en las imágenes, empujará la última
        imagen hacia la izquierda cuando la galería tenga un diseño de dos columnas.
        En este momento, está en el centro porque se ha establecido justify-content:
        center en el contenedor flex.
    */
    content:"";
    width: 350px
}